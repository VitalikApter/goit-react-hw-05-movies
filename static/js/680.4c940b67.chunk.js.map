{"version":3,"file":"static/js/680.4c940b67.chunk.js","mappings":"sKACA,MAA4B,8BAA5B,EAAwE,gCAAxE,EAA4H,sC,4CCuB5H,EAjBmB,SAAC,GAAoB,IAAlBA,EAAiB,EAAjBA,WACdC,GAAWC,EAAAA,EAAAA,UAAS,IAC1B,OACE,gBAAKC,UAAWC,IAAWC,EAAeA,GAA1C,UACE,eAAIF,UAAWE,EAAf,SACGL,EAAWM,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAOC,EAAd,EAAcA,KAAd,OACd,eAAaN,UAAWE,EAAxB,UACE,SAAC,KAAD,CAAMK,GAAE,kBAAaH,GAAMI,MAAO,CAAEC,KAAMX,GAA1C,SACGO,GAASC,KAFLF,EADK,OAUvB,C,sDCrBD,OAAgB,cAAgB,gC,SCchC,EAZgB,SAAC,GAAD,IAAGM,EAAH,EAAGA,SAAUV,EAAb,EAAaA,UAAWK,EAAxB,EAAwBA,MAAxB,OACd,qBAASL,UAAWE,EAAIF,GAAxB,WACE,eAAIA,UAAWE,EAAAA,cAAf,SAAmCG,IAClCK,IAHW,C,6HCAVC,EAAgBC,EAAAA,EAAAA,OAAa,CACjCC,QAAS,gCACTC,OAAQ,CACNC,QAAS,sCAIAC,EAAY,SAACC,EAAKC,GAC7B,OAAOP,EAAc,CACnBM,IAAAA,EACAH,OAAQ,CAAEI,MAAOA,KAEhBC,MAAK,kBAAmC,CAAEC,KAArC,EAAGA,KAAwCC,OAA3C,EAASA,OAA0CC,WAAnD,EAAiBA,WAAjB,IACLC,OAAM,SAAAC,GACLC,EAAAA,GAAAA,MAAYD,EACb,GACJ,ECnBYE,EAAW,SAACC,GAAD,+CAAkDA,EAAlD,ECAXC,EAAwB,SAAAC,GAAU,OAC7CA,EAAWC,QAAO,SAACC,EAAD,GAA8B,IAAjB3B,EAAgB,EAAhBA,GAAIC,EAAY,EAAZA,MAEjC,OADA0B,EAASC,KAAK,CAAE5B,GAAAA,EAAIC,MAAAA,IACb0B,CACR,GAAE,GAJ0C,C,oBCS/C,IATkB,CAChBE,SAAU,qBACVC,OAAQ,mBACRC,OAAQ,gBACRC,aAAc,SAAAC,GAAO,uBAAcA,EAAd,EACrBC,aAAc,SAAAD,GAAO,uBAAcA,EAAd,aACrBE,aAAc,SAAAF,GAAO,uBAAcA,EAAd,a,2HCmCvB,UAhCiB,WACf,OAAwCtC,EAAAA,EAAAA,UAAS,IAAjD,eAAOyC,EAAP,KAAqBC,EAArB,KACM3C,GAAW4C,EAAAA,EAAAA,MACjB,GAAkC3C,EAAAA,EAAAA,WAAS,GAA3C,eAAO4C,EAAP,KAAkBC,EAAlB,KAiBA,OAfAC,EAAAA,EAAAA,YAAU,WACRD,GAAa,IACb5B,EAAAA,EAAAA,IAAU8B,EAAAA,EAAAA,UACP3B,MAAK,YAA4B,IAAjB4B,EAAgB,EAAxB3B,KAAQ2B,QACTC,GAAepB,EAAAA,EAAAA,IAAsBmB,GAC3CN,EAAgBO,EACjB,IACAzB,OAAM,SAAAC,GACLC,EAAAA,GAAAA,MAAY,kBACb,IACAwB,SAAQ,WACPL,GAAa,EACd,GACJ,GAAE,KAGD,gCACGD,IAAa,SAAC,IAAD,IACbH,EAAaU,OAAS,IACrB,SAAC,IAAD,CAAS7C,MAAM,iBAAf,UACE,SAAC,IAAD,CAAYR,WAAY2C,EAAc1C,SAAUA,QAKzD,C","sources":["webpack://react-homework-template/./src/components/MoviesList/MoviesList.module.css?de3d","components/MoviesList/MoviesList.jsx","webpack://react-homework-template/./src/components/Section/Section.module.css?dbe8","components/Section/Section.jsx","components/helpers/fetchData.js","components/helpers/imagePath.js","components/helpers/parseDataForMovieList.js","constants/QueryPath/QueryPath.js","pages/HomePage/HomePage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"container\":\"MoviesList_container__0JGj2\",\"movies_list\":\"MoviesList_movies_list__EAcLe\",\"movies_list__item\":\"MoviesList_movies_list__item__PJxaz\"};","import PropTypes from 'prop-types';\n\nimport css from './MoviesList.module.css';\nimport classNames from 'classnames';\nimport { Link } from 'react-router-dom';\nimport { useState } from 'react';\n\nconst MoviesList = ({ moviesList }) => {\n  const location = useState('');\n  return (\n    <div className={classNames(css.container, css.movies_list)}>\n      <ul className={css.movies_list}>\n        {moviesList.map(({ id, title, name }) => (\n          <li key={id} className={css.movies_list__item}>\n            <Link to={`/movies/${id}`} state={{ from: location }}>\n              {title || name}\n            </Link>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default MoviesList;\n\nMoviesList.propTypes = {\n  moviesList: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n      name: PropTypes.string,\n    }).isRequired\n  ).isRequired,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"section_title\":\"Section_section_title__Pz+EF\"};","import css from './Section.module.css';\nimport PropTypes from 'prop-types';\n\nconst Section = ({ children, className, title }) => (\n  <section className={css[className]}>\n    <h2 className={css.section_title}>{title}</h2>\n    {children}\n  </section>\n);\n\nSection.propTypes = {\n  class: PropTypes.string,\n  children: PropTypes.element,\n};\n\nexport default Section;\n","import axios from 'axios';\nimport { toast } from 'react-toastify';\n\nconst instanseAxios = axios.create({\n  baseURL: 'https://api.themoviedb.org/3/',\n  params: {\n    api_key: 'c887019741c8f0f75dbac80f70612516',\n  },\n});\n\nexport const fetchData = (url, query) => {\n  return instanseAxios({\n    url,\n    params: { query: query },\n  })\n    .then(({ data, status, statusText }) => ({ data, status, statusText }))\n    .catch(err => {\n      toast.error(err);\n    });\n};\n","export const imagePath =(poster_path)=> `https://image.tmdb.org/t/p/w500${poster_path}`;","export const parseDataForMovieList = movieArrey =>\n  movieArrey.reduce((resArrey, { id, title }) => {\n    resArrey.push({ id, title });\n    return resArrey;\n  }, []);","const QueryPath = {\n  trending: 'trending/movie/day',\n  genres: 'genre/movie/list',\n  search: '/search/movie',\n  movieDetails: movieId => `/movie/${movieId}`,\n  movieCredits: movieId => `/movie/${movieId}/credits`,\n  movieReviews: movieId => `/movie/${movieId}/reviews`,\n};\n\nexport default QueryPath;\n","import { useState, useEffect } from 'react';\nimport MoviesList from 'components/MoviesList/MoviesList';\nimport Section from 'components/Section/Section';\nimport { fetchData, parseDataForMovieList } from 'components/helpers/Api';\nimport QueryPath from 'constants/QueryPath/QueryPath';\nimport { useLocation } from 'react-router-dom';\nimport Loader from 'components/Loader/Loader';\nimport { toast } from 'react-toastify';\n\nconst HomePage = () => {\n  const [treadingList, setTreadingList] = useState([]);\n  const location = useLocation();\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    setIsLoading(true);\n    fetchData(QueryPath.trending)\n      .then(({ data: { results } }) => {\n        const treadingData = parseDataForMovieList(results);\n        setTreadingList(treadingData);\n      })\n      .catch(err => {\n        toast.error('Something wrong');\n      })\n      .finally(() => {\n        setIsLoading(false);\n      });\n  }, []);\n\n  return (\n    <>\n      {isLoading && <Loader />}\n      {treadingList.length > 0 && (\n        <Section title=\"Trending today\">\n          <MoviesList moviesList={treadingList} location={location} />\n        </Section>\n      )}\n    </>\n  );\n};\n\nexport default HomePage;\n"],"names":["moviesList","location","useState","className","classNames","css","map","id","title","name","to","state","from","children","instanseAxios","axios","baseURL","params","api_key","fetchData","url","query","then","data","status","statusText","catch","err","toast","imagePath","poster_path","parseDataForMovieList","movieArrey","reduce","resArrey","push","trending","genres","search","movieDetails","movieId","movieCredits","movieReviews","treadingList","setTreadingList","useLocation","isLoading","setIsLoading","useEffect","QueryPath","results","treadingData","finally","length"],"sourceRoot":""}