{"version":3,"file":"static/js/337.7c5dd039.chunk.js","mappings":"sKACA,MAA4B,8BAA5B,EAAwE,gCAAxE,EAA4H,sC,mCCmB5H,EAhBmB,SAAC,GAAqC,IAAnCA,EAAkC,EAAlCA,WAAmBC,GAAe,EAAtBC,MAAsB,EAAfD,UACvC,OACE,gBAAKE,UAAWC,IAAWC,EAAeA,GAA1C,UACE,eAAIF,UAAWE,EAAf,SACGL,EAAWM,KAAI,gBAAGC,EAAH,EAAGA,GAAIL,EAAP,EAAOA,MAAP,OACd,eAAaC,UAAWE,EAAxB,UACE,SAAC,KAAD,CAAMG,GAAE,kBAAaD,GAAME,MAAO,CAAEC,KAAMT,GAA1C,SACGC,KAFIK,EADK,OAUvB,C,oHCjBD,EAAuB,yB,kBCuCvB,EAnCkB,SAAC,GAAkB,IAAhBI,EAAe,EAAfA,SACnB,GAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KAkBA,OACE,SAACC,EAAA,EAAD,WACE,kBAAMZ,UAAWE,EAAUM,SAdP,SAAAK,GACtBA,EAAIC,iBACJ,IAAMC,EAAWL,EAAMM,OACvB,IAAKD,EAASE,OAGZ,OAFAC,EAAAA,GAAAA,KAAW,sCACXP,EAAS,IAGXH,EAASO,GACTJ,EAAS,GACV,EAIG,WACE,kBACEQ,KAAK,SACLC,KAAK,OACLC,UAAQ,EACRC,MAAOZ,EACPa,SAxBoB,SAAAV,GAC1BF,EAASE,EAAIW,OAAOF,MACrB,KAwBK,mBAAQF,KAAK,SAAb,wBAIP,E,mCCeD,EA1CmB,WAAO,IAAD,EACvB,GAAkCX,EAAAA,EAAAA,WAAS,GAA3C,eAAOgB,EAAP,KAAkBC,EAAlB,KACA,GAAoCjB,EAAAA,EAAAA,UAAS,IAA7C,eAAOZ,EAAP,KAAmB8B,EAAnB,KAEA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMpB,EAAK,UAAGmB,EAAaE,IAAI,gBAApB,QAAgC,GAErCjC,GAAWkC,EAAAA,EAAAA,MAqBjB,OAfAC,EAAAA,EAAAA,YAAU,WACHvB,IACLgB,GAAa,IACbQ,EAAAA,EAAAA,IAAUC,EAAAA,EAAAA,OAAkBzB,GACzB0B,MAAK,YAAiC,IAAD,IAA7BC,KAAQC,QACfX,OADoC,MAAX,CAAC,EAAU,EAErC,IACAY,OAAM,SAAAC,GACLtB,EAAAA,GAAAA,MAAY,kBACb,IACAuB,SAAQ,WACPf,GAAa,EACd,IACJ,GAAE,CAAChB,KAGF,SAACE,EAAA,EAAD,WACE,iCACE,SAAC,EAAD,CAAWJ,SAtBO,SAAAkC,GACtBZ,EAAgB,CAAEpB,MAAOgC,GAC1B,IAqBMjB,IAAc5B,EAAWoB,QACxB,SAAC0B,EAAA,EAAD,KAEA,SAACC,EAAA,EAAD,CAAY/C,WAAYA,EAAYC,SAAUA,QAKvD,C","sources":["webpack://react-homework-template/./src/components/MoviesList/MoviesList.module.css?de3d","components/MoviesList/MoviesList.jsx","webpack://react-homework-template/./src/components/SearchForm/SearchForm.module.css?d6f1","components/SearchForm/SearchForm.jsx","pages/MoviesPage/MoviesPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"container\":\"MoviesList_container__0JGj2\",\"movies_list\":\"MoviesList_movies_list__EAcLe\",\"movies_list__item\":\"MoviesList_movies_list__item__PJxaz\"};","import css from './MoviesList.module.css';\nimport classNames from 'classnames';\nimport { Link } from 'react-router-dom';\n\nconst MoviesList = ({ moviesList, title, location }) => {\n  return (\n    <div className={classNames(css.container, css.movies_list)}>\n      <ul className={css.movies_list}>\n        {moviesList.map(({ id, title }) => (\n          <li key={id} className={css.movies_list__item}>\n            <Link to={`/movies/${id}`} state={{ from: location }}>\n              {title}\n            </Link>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default MoviesList;","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"SearchForm_form__o80os\"};","import { useState } from 'react';\nimport Section from 'components/Section/Section';\nimport css from './SearchForm.module.css';\nimport { toast } from 'react-toastify';\n\nconst SearhForm = ({ onSubmit }) => {\n  const [query, setQuery] = useState('');\n\n  const onCangeInputHandler = evt => {\n    setQuery(evt.target.value);\n  };\n\n  const onSubmitHandler = evt => {\n    evt.preventDefault();\n    const queryStr = query.trim();\n    if (!queryStr.length) {\n      toast.warn('Enter something to search for');\n      setQuery('');\n      return;\n    }\n    onSubmit(queryStr);\n    setQuery('');\n  };\n\n  return (\n    <Section>\n      <form className={css.form} onSubmit={onSubmitHandler}>\n        <input\n          name=\"search\"\n          type=\"text\"\n          required\n          value={query}\n          onChange={onCangeInputHandler}\n        />\n        <button type=\"submit\">Search</button>\n      </form>\n    </Section>\n  );\n};\n\nexport default SearhForm;","import Loader from 'components/Loader/Loader';\nimport MoviesList from 'components/MoviesList/MoviesList';\nimport SearhForm from 'components/SearchForm/SearchForm';\nimport Section from 'components/Section/Section';\nimport QueryPath from 'constants/QueryPath/QueryPath';\nimport { fetchData } from 'components/helpers';\nimport { useEffect } from 'react';\nimport { useState } from 'react';\nimport { useLocation, useSearchParams } from 'react-router-dom';\nimport { toast } from 'react-toastify';\n\nconst MoviesPage = () => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [moviesList, setMoviesList] = useState([]);\n\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('query') ?? '';\n\n  const location = useLocation();\n\n  const onSubmitHandler = fromSearchValue => {\n    setSearchParams({ query: fromSearchValue });\n  };\n\n  useEffect(() => {\n    if (!query) return;\n    setIsLoading(true);\n    fetchData(QueryPath.search, query)\n      .then(({ data: { results = {} } }) => {\n        setMoviesList(results);\n      })\n      .catch(err => {\n        toast.error('Something wrong');\n      })\n      .finally(() => {\n        setIsLoading(false);\n      });\n  }, [query]);\n\n  return (\n    <Section>\n      <>\n        <SearhForm onSubmit={onSubmitHandler} />\n        {isLoading && !moviesList.length ? (\n          <Loader />\n        ) : (\n          <MoviesList moviesList={moviesList} location={location} />\n        )}\n      </>\n    </Section>\n  );\n};\n\nexport default MoviesPage;\n"],"names":["moviesList","location","title","className","classNames","css","map","id","to","state","from","onSubmit","useState","query","setQuery","Section","evt","preventDefault","queryStr","trim","length","toast","name","type","required","value","onChange","target","isLoading","setIsLoading","setMoviesList","useSearchParams","searchParams","setSearchParams","get","useLocation","useEffect","fetchData","QueryPath","then","data","results","catch","err","finally","fromSearchValue","Loader","MoviesList"],"sourceRoot":""}